{"version":3,"file":"6549.app.js","mappings":";;;;;;;;;;;;;;;;;;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AAC1E;;AAEA,CAA8G;AAC9G,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA","sources":["webpack://radic/./src/.vuepress/.temp/pages/packages/core/index.html.vue","webpack://radic/./src/.vuepress/.temp/pages/packages/core/index.html.vue?5f12","webpack://radic/./node_modules/vue-loader/dist/exportHelper.js","webpack://radic/./src/.vuepress/.temp/pages/packages/core/index.html.js"],"sourcesContent":["<h1 id=\"console\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#console\" aria-hidden=\"true\">#</a> Console</h1>\n<p>Create class based commands with Yargs using decorators.</p>\n<p><strong>index.ts</strong></p>\n<div class=\"language-typescript ext-ts line-numbers-mode\"><pre v-pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> yargs <span class=\"token keyword\">from</span> <span class=\"token string\">'yargs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>enableYargsClassCommands<span class=\"token punctuation\">,</span> addCommandDirs<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@radic/console'</span>\n\n<span class=\"token function\">addCommandDirs</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'path/*/to/*/somewhere'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'another/**/path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// glob patterns to command directories</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.ts'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'!.d.ts'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// allow .js and .ts. Ignore .d.ts files</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">enableYargsClassCommands</span><span class=\"token punctuation\">(</span>yargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nyargs<span class=\"token punctuation\">.</span><span class=\"token function\">help</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'help'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">showHelpOnFail</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> yargs<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> args<span class=\"token punctuation\">[</span> <span class=\"token string\">'help'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    yargs<span class=\"token punctuation\">.</span><span class=\"token function\">showHelp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br></div></div><p><strong>commands/TestCommand</strong></p>\n<div class=\"language-typescript ext-ts line-numbers-mode\"><pre v-pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> arg<span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> option <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../decorators'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Output <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@radic/console-output'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">command</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Testing this'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCommand</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">option</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    write<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">option</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    text<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">handler</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">arg</span></span><span class=\"token punctuation\">.</span>required<span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The path to write to'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n                 <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">arg</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>description<span class=\"token operator\">:</span><span class=\"token string\">'another way'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> count<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Writing to path </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Counting to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Showing your </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>ms<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> cycles<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cycles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> txt<span class=\"token operator\">=</span><span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">res</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Finished timeout (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cycles<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">) after </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ms<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br><span class=\"line-number\">32</span><br></div></div>","import { ssrRender } from \"./index.html.vue?vue&type=template&id=aeb8590e\"\nconst script = {}\n\nimport exportComponent from \"/home/radic/projects/@radic-console/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","export const data = {\n  \"key\": \"v-2a0ff7f2\",\n  \"path\": \"/packages/core/\",\n  \"title\": \"Console\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [],\n  \"filePathRelative\": \"packages/core/README.md\"\n}\n"],"names":[],"sourceRoot":""}