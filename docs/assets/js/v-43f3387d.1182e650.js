"use strict";(self.webpackChunkradic=self.webpackChunkradic||[]).push([[550],{3829:(e,t,i)=>{i.r(t),i.d(t,{default:()=>st});var n=i(6252);const a=(0,n.Uk)("@radic/console-input"),r=(0,n.Uk)(" / FileTreeSelectionQuestion"),o=(0,n.uE)('<h1 id="interface-filetreeselectionquestion-t" tabindex="-1"><a class="header-anchor" href="#interface-filetreeselectionquestion-t" aria-hidden="true">#</a> Interface: FileTreeSelectionQuestion&lt;T&gt;</h1><p>Provides options for a question for the <code>InputPrompt</code>.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>Answers</code> = <code>Answers</code></td><td style="text-align:left;">The type of the answers.</td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',5),l=(0,n._)("code",null,"FileTreeSelectionQuestionOptions",-1),d=(0,n.Uk)("<"),s=(0,n._)("code",null,"T",-1),h=(0,n.Uk)(">"),c=(0,n._)("p",null,[(0,n.Uk)("↳ "),(0,n._)("strong",null,[(0,n._)("code",null,"FileTreeSelectionQuestion")])],-1),p=(0,n._)("h2",{id:"table-of-contents",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),(0,n.Uk)(" Table of contents")],-1),u=(0,n._)("h3",{id:"properties",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),(0,n.Uk)(" Properties")],-1),f=(0,n.Uk)("default"),m=(0,n.Uk)("hideChildrenOfValid"),g=(0,n.Uk)("message"),k=(0,n.Uk)("multiple"),_=(0,n.Uk)("name"),b=(0,n.Uk)("onlyShowDir"),y=(0,n.Uk)("onlyShowValid"),x=(0,n.Uk)("prefix"),w=(0,n.Uk)("root"),T=(0,n.Uk)("suffix"),U=(0,n.Uk)("transformer"),S=(0,n.Uk)("type"),O=(0,n.Uk)("when"),Q=(0,n._)("h3",{id:"methods",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),(0,n.Uk)(" Methods")],-1),F=(0,n.Uk)("filter"),v=(0,n.Uk)("validate"),W=(0,n.uE)('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h3><p>• <code>Optional</code> <strong>default</strong>: <code>any</code></p><p>The default value of the question.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),D=(0,n.Uk)("FileTreeSelectionQuestionOptions"),I=(0,n.Uk)("."),q=(0,n.Uk)("default"),E=(0,n.uE)('<h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:277</p><hr><h3 id="hidechildrenofvalid" tabindex="-1"><a class="header-anchor" href="#hidechildrenofvalid" aria-hidden="true">#</a> hideChildrenOfValid</h3><p>• <code>Optional</code> <strong>hideChildrenOfValid</strong>: <code>boolean</code></p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4>',6),P=(0,n.Uk)("FileTreeSelectionQuestionOptions"),V=(0,n.Uk)("."),L=(0,n.Uk)("hideChildrenOfValid"),C=(0,n._)("h4",{id:"defined-in-1",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),A={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L31",target:"_blank",rel:"noopener noreferrer"},M=(0,n.Uk)("packages/console-input/src/types.ts:31"),R=(0,n.uE)('<hr><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> message</h3><p>• <code>Optional</code> <strong>message</strong>: <code>AsyncDynamicQuestionProperty</code>&lt;<code>string</code>, <code>T</code>&gt;</p><p>The message to show to the user.</p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4>',5),H=(0,n.Uk)("FileTreeSelectionQuestionOptions"),N=(0,n.Uk)("."),Z=(0,n.Uk)("message"),K=(0,n.uE)('<h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:272</p><hr><h3 id="multiple" tabindex="-1"><a class="header-anchor" href="#multiple" aria-hidden="true">#</a> multiple</h3><p>• <code>Optional</code> <strong>multiple</strong>: <code>boolean</code></p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4>',6),Y=(0,n.Uk)("FileTreeSelectionQuestionOptions"),j=(0,n.Uk)("."),z=(0,n.Uk)("multiple"),B=(0,n._)("h4",{id:"defined-in-3",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),G={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L33",target:"_blank",rel:"noopener noreferrer"},J=(0,n.Uk)("packages/console-input/src/types.ts:33"),X=(0,n.uE)('<hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <code>Optional</code> <strong>name</strong>: <code>KeyUnion</code>&lt;<code>T</code>&gt;</p><p>The key to save the answer to the answers-hash.</p><h4 id="inherited-from-4" tabindex="-1"><a class="header-anchor" href="#inherited-from-4" aria-hidden="true">#</a> Inherited from</h4>',5),$=(0,n.Uk)("FileTreeSelectionQuestionOptions"),ee=(0,n.Uk)("."),te=(0,n.Uk)("name"),ie=(0,n.uE)('<h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:267</p><hr><h3 id="onlyshowdir" tabindex="-1"><a class="header-anchor" href="#onlyshowdir" aria-hidden="true">#</a> onlyShowDir</h3><p>• <code>Optional</code> <strong>onlyShowDir</strong>: <code>boolean</code></p><h4 id="inherited-from-5" tabindex="-1"><a class="header-anchor" href="#inherited-from-5" aria-hidden="true">#</a> Inherited from</h4>',6),ne=(0,n.Uk)("FileTreeSelectionQuestionOptions"),ae=(0,n.Uk)("."),re=(0,n.Uk)("onlyShowDir"),oe=(0,n._)("h4",{id:"defined-in-5",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),le={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L28",target:"_blank",rel:"noopener noreferrer"},de=(0,n.Uk)("packages/console-input/src/types.ts:28"),se=(0,n._)("hr",null,null,-1),he=(0,n._)("h3",{id:"onlyshowvalid",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#onlyshowvalid","aria-hidden":"true"},"#"),(0,n.Uk)(" onlyShowValid")],-1),ce=(0,n._)("p",null,[(0,n.Uk)("• "),(0,n._)("code",null,"Optional"),(0,n.Uk)(),(0,n._)("strong",null,"onlyShowValid"),(0,n.Uk)(": "),(0,n._)("code",null,"boolean")],-1),pe=(0,n._)("h4",{id:"inherited-from-6",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#inherited-from-6","aria-hidden":"true"},"#"),(0,n.Uk)(" Inherited from")],-1),ue=(0,n.Uk)("FileTreeSelectionQuestionOptions"),fe=(0,n.Uk)("."),me=(0,n.Uk)("onlyShowValid"),ge=(0,n._)("h4",{id:"defined-in-6",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),ke={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L30",target:"_blank",rel:"noopener noreferrer"},_e=(0,n.Uk)("packages/console-input/src/types.ts:30"),be=(0,n.uE)('<hr><h3 id="prefix" tabindex="-1"><a class="header-anchor" href="#prefix" aria-hidden="true">#</a> prefix</h3><p>• <code>Optional</code> <strong>prefix</strong>: <code>string</code></p><p>The prefix of the <code>message</code>.</p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7" aria-hidden="true">#</a> Inherited from</h4>',5),ye=(0,n.Uk)("FileTreeSelectionQuestionOptions"),xe=(0,n.Uk)("."),we=(0,n.Uk)("prefix"),Te=(0,n.uE)('<h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:282</p><hr><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root" aria-hidden="true">#</a> root</h3><p>• <code>Optional</code> <strong>root</strong>: <code>string</code></p><h4 id="inherited-from-8" tabindex="-1"><a class="header-anchor" href="#inherited-from-8" aria-hidden="true">#</a> Inherited from</h4>',6),Ue=(0,n.Uk)("FileTreeSelectionQuestionOptions"),Se=(0,n.Uk)("."),Oe=(0,n.Uk)("root"),Qe=(0,n._)("h4",{id:"defined-in-8",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),Fe={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L29",target:"_blank",rel:"noopener noreferrer"},ve=(0,n.Uk)("packages/console-input/src/types.ts:29"),We=(0,n.uE)('<hr><h3 id="suffix" tabindex="-1"><a class="header-anchor" href="#suffix" aria-hidden="true">#</a> suffix</h3><p>• <code>Optional</code> <strong>suffix</strong>: <code>string</code></p><p>The suffix of the <code>message</code>.</p><h4 id="inherited-from-9" tabindex="-1"><a class="header-anchor" href="#inherited-from-9" aria-hidden="true">#</a> Inherited from</h4>',5),De=(0,n.Uk)("FileTreeSelectionQuestionOptions"),Ie=(0,n.Uk)("."),qe=(0,n.Uk)("suffix"),Ee=(0,n.uE)('<h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:287</p><hr><h3 id="transformer" tabindex="-1"><a class="header-anchor" href="#transformer" aria-hidden="true">#</a> transformer</h3><p>• <code>Optional</code> <strong>transformer</strong>: <code>Function</code></p><h4 id="inherited-from-10" tabindex="-1"><a class="header-anchor" href="#inherited-from-10" aria-hidden="true">#</a> Inherited from</h4>',6),Pe=(0,n.Uk)("FileTreeSelectionQuestionOptions"),Ve=(0,n.Uk)("."),Le=(0,n.Uk)("transformer"),Ce=(0,n._)("h4",{id:"defined-in-10",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),Ae={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L32",target:"_blank",rel:"noopener noreferrer"},Me=(0,n.Uk)("packages/console-input/src/types.ts:32"),Re=(0,n.uE)('<hr><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><p>• <code>Optional</code> <strong>type</strong>: <code>&quot;file-tree-selection&quot;</code></p><p>The type of the question.</p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> Overrides</h4>',5),He=(0,n.Uk)("FileTreeSelectionQuestionOptions"),Ne=(0,n.Uk)("."),Ze=(0,n.Uk)("type"),Ke=(0,n._)("h4",{id:"defined-in-11",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),Ye={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L46",target:"_blank",rel:"noopener noreferrer"},je=(0,n.Uk)("packages/console-input/src/types.ts:46"),ze=(0,n.uE)('<hr><h3 id="when" tabindex="-1"><a class="header-anchor" href="#when" aria-hidden="true">#</a> when</h3><p>• <code>Optional</code> <strong>when</strong>: <code>AsyncDynamicQuestionProperty</code>&lt;<code>boolean</code>, <code>T</code>&gt;</p><p>A value indicating whether the question should be prompted.</p><h4 id="inherited-from-11" tabindex="-1"><a class="header-anchor" href="#inherited-from-11" aria-hidden="true">#</a> Inherited from</h4>',5),Be=(0,n.Uk)("FileTreeSelectionQuestionOptions"),Ge=(0,n.Uk)("."),Je=(0,n.Uk)("when"),Xe=(0,n.uE)('<h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:303</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><p>▸ <code>Optional</code> <strong>filter</strong>(<code>input</code>, <code>answers</code>): <code>any</code></p><p>Post-processes the answer.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The answer provided by the user.</td></tr><tr><td style="text-align:left;"><code>answers</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">The answers provided by the user.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>any</code></p><h4 id="inherited-from-12" tabindex="-1"><a class="header-anchor" href="#inherited-from-12" aria-hidden="true">#</a> Inherited from</h4>',11),$e=(0,n.Uk)("FileTreeSelectionQuestionOptions"),et=(0,n.Uk)("."),tt=(0,n.Uk)("filter"),it=(0,n.uE)('<h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:298</p><hr><h3 id="validate" tabindex="-1"><a class="header-anchor" href="#validate" aria-hidden="true">#</a> validate</h3><p>▸ <code>Optional</code> <strong>validate</strong>(<code>input</code>, <code>answers?</code>): <code>string</code> | <code>boolean</code> | <code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p><p>Validates the integrity of the answer.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The answer provided by the user.</td></tr><tr><td style="text-align:left;"><code>answers?</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">The answers provided by the user.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>string</code> | <code>boolean</code> | <code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p><p>Either a value indicating whether the answer is valid or a <code>string</code> which describes the error.</p><h4 id="inherited-from-13" tabindex="-1"><a class="header-anchor" href="#inherited-from-13" aria-hidden="true">#</a> Inherited from</h4>',12),nt=(0,n.Uk)("FileTreeSelectionQuestionOptions"),at=(0,n.Uk)("."),rt=(0,n.Uk)("validate"),ot=(0,n._)("h4",{id:"defined-in-14",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),lt=(0,n._)("p",null,"node_modules/@types/inquirer/index.d.ts:317",-1),dt={},st=(0,i(3744).Z)(dt,[["render",function(e,t){const i=(0,n.up)("RouterLink"),dt=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/"},{default:(0,n.w5)((()=>[a])),_:1}),r]),o,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[l])),_:1}),d,s,h]),c])]),p,u,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#default"},{default:(0,n.w5)((()=>[f])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#hidechildrenofvalid"},{default:(0,n.w5)((()=>[m])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#message"},{default:(0,n.w5)((()=>[g])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#multiple"},{default:(0,n.w5)((()=>[k])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#name"},{default:(0,n.w5)((()=>[_])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#onlyshowdir"},{default:(0,n.w5)((()=>[b])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#onlyshowvalid"},{default:(0,n.w5)((()=>[y])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#prefix"},{default:(0,n.w5)((()=>[x])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#root"},{default:(0,n.w5)((()=>[w])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#suffix"},{default:(0,n.w5)((()=>[T])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#transformer"},{default:(0,n.w5)((()=>[U])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#type"},{default:(0,n.w5)((()=>[S])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#when"},{default:(0,n.w5)((()=>[O])),_:1})])]),Q,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#filter"},{default:(0,n.w5)((()=>[F])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html#validate"},{default:(0,n.w5)((()=>[v])),_:1})])]),W,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[D])),_:1}),I,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#default"},{default:(0,n.w5)((()=>[q])),_:1})]),E,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[P])),_:1}),V,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#hidechildrenofvalid"},{default:(0,n.w5)((()=>[L])),_:1})]),C,(0,n._)("p",null,[(0,n._)("a",A,[M,(0,n.Wm)(dt)])]),R,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[H])),_:1}),N,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#message"},{default:(0,n.w5)((()=>[Z])),_:1})]),K,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[Y])),_:1}),j,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#multiple"},{default:(0,n.w5)((()=>[z])),_:1})]),B,(0,n._)("p",null,[(0,n._)("a",G,[J,(0,n.Wm)(dt)])]),X,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[$])),_:1}),ee,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#name"},{default:(0,n.w5)((()=>[te])),_:1})]),ie,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[ne])),_:1}),ae,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#onlyshowdir"},{default:(0,n.w5)((()=>[re])),_:1})]),oe,(0,n._)("p",null,[(0,n._)("a",le,[de,(0,n.Wm)(dt)])]),se,he,ce,pe,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[ue])),_:1}),fe,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#onlyshowvalid"},{default:(0,n.w5)((()=>[me])),_:1})]),ge,(0,n._)("p",null,[(0,n._)("a",ke,[_e,(0,n.Wm)(dt)])]),be,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[ye])),_:1}),xe,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#prefix"},{default:(0,n.w5)((()=>[we])),_:1})]),Te,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[Ue])),_:1}),Se,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#root"},{default:(0,n.w5)((()=>[Oe])),_:1})]),Qe,(0,n._)("p",null,[(0,n._)("a",Fe,[ve,(0,n.Wm)(dt)])]),We,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[De])),_:1}),Ie,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#suffix"},{default:(0,n.w5)((()=>[qe])),_:1})]),Ee,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[Pe])),_:1}),Ve,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#transformer"},{default:(0,n.w5)((()=>[Le])),_:1})]),Ce,(0,n._)("p",null,[(0,n._)("a",Ae,[Me,(0,n.Wm)(dt)])]),Re,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[He])),_:1}),Ne,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#type"},{default:(0,n.w5)((()=>[Ze])),_:1})]),Ke,(0,n._)("p",null,[(0,n._)("a",Ye,[je,(0,n.Wm)(dt)])]),ze,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[Be])),_:1}),Ge,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#when"},{default:(0,n.w5)((()=>[Je])),_:1})]),Xe,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[$e])),_:1}),et,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#filter"},{default:(0,n.w5)((()=>[tt])),_:1})]),it,(0,n._)("p",null,[(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html"},{default:(0,n.w5)((()=>[nt])),_:1}),at,(0,n.Wm)(i,{to:"/packages/console-input/api/interfaces/FileTreeSelectionQuestionOptions.html#validate"},{default:(0,n.w5)((()=>[rt])),_:1})]),ot,lt],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const i=e.__vccOpts||e;for(const[e,n]of t)i[e]=n;return i}},3002:(e,t,i)=>{i.r(t),i.d(t,{data:()=>n});const n={key:"v-43f3387d",path:"/packages/console-input/api/interfaces/FileTreeSelectionQuestion.html",title:"Interface: FileTreeSelectionQuestion<T>",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Type parameters",slug:"type-parameters",children:[]},{level:2,title:"Hierarchy",slug:"hierarchy",children:[]},{level:2,title:"Table of contents",slug:"table-of-contents",children:[{level:3,title:"Properties",slug:"properties",children:[]},{level:3,title:"Methods",slug:"methods",children:[]}]},{level:2,title:"Properties",slug:"properties-1",children:[{level:3,title:"default",slug:"default",children:[]},{level:3,title:"hideChildrenOfValid",slug:"hidechildrenofvalid",children:[]},{level:3,title:"message",slug:"message",children:[]},{level:3,title:"multiple",slug:"multiple",children:[]},{level:3,title:"name",slug:"name",children:[]},{level:3,title:"onlyShowDir",slug:"onlyshowdir",children:[]},{level:3,title:"onlyShowValid",slug:"onlyshowvalid",children:[]},{level:3,title:"prefix",slug:"prefix",children:[]},{level:3,title:"root",slug:"root",children:[]},{level:3,title:"suffix",slug:"suffix",children:[]},{level:3,title:"transformer",slug:"transformer",children:[]},{level:3,title:"type",slug:"type",children:[]},{level:3,title:"when",slug:"when",children:[]}]},{level:2,title:"Methods",slug:"methods-1",children:[{level:3,title:"filter",slug:"filter",children:[]},{level:3,title:"validate",slug:"validate",children:[]}]}],filePathRelative:"packages/console-input/api/interfaces/FileTreeSelectionQuestion.md"}}}]);