"use strict";(self.webpackChunkradic=self.webpackChunkradic||[]).push([[1614],{2379:(e,t,a)=>{a.r(t),a.d(t,{default:()=>ae});var n=a(6252);const i=(0,n.Uk)("@radic/console-input"),r=(0,n.Uk)(" / AutocompleteQuestionOptions"),d=(0,n.uE)('<h1 id="interface-autocompletequestionoptions-t" tabindex="-1"><a class="header-anchor" href="#interface-autocompletequestionoptions-t" aria-hidden="true">#</a> Interface: AutocompleteQuestionOptions&lt;T&gt;</h1><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',4),o=(0,n._)("p",null,[(0,n._)("code",null,"Question"),(0,n.Uk)("<"),(0,n._)("code",null,"T"),(0,n.Uk)(">")],-1),s=(0,n._)("p",null,[(0,n.Uk)("↳ "),(0,n._)("strong",null,[(0,n._)("code",null,"AutocompleteQuestionOptions")])],-1),l=(0,n.Uk)("↳↳ "),h=(0,n._)("code",null,"AutocompleteQuestion",-1),c=(0,n._)("h2",{id:"table-of-contents",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),(0,n.Uk)(" Table of contents")],-1),p=(0,n._)("h3",{id:"properties",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),(0,n.Uk)(" Properties")],-1),u=(0,n.Uk)("default"),f=(0,n.Uk)("emptyText"),g=(0,n.Uk)("message"),m=(0,n.Uk)("name"),b=(0,n.Uk)("pageSize"),x=(0,n.Uk)("prefix"),y=(0,n.Uk)("searchText"),_=(0,n.Uk)("suffix"),k=(0,n.Uk)("suggestOnly"),v=(0,n.Uk)("type"),O=(0,n.Uk)("when"),U=(0,n._)("h3",{id:"methods",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),(0,n.Uk)(" Methods")],-1),w=(0,n.Uk)("filter"),Q=(0,n.Uk)("source"),T=(0,n.Uk)("validate"),A=(0,n.uE)('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h3><p>• <code>Optional</code> <strong>default</strong>: <code>string</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> Overrides</h4><p>Question.default</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',6),W={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L277",target:"_blank",rel:"noopener noreferrer"},D=(0,n.Uk)("packages/console-input/src/types.ts:277"),P=(0,n._)("hr",null,null,-1),q=(0,n._)("h3",{id:"emptytext",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#emptytext","aria-hidden":"true"},"#"),(0,n.Uk)(" emptyText")],-1),L=(0,n._)("p",null,[(0,n.Uk)("• "),(0,n._)("code",null,"Optional"),(0,n.Uk)(),(0,n._)("strong",null,"emptyText"),(0,n.Uk)(": "),(0,n._)("code",null,"string")],-1),z=(0,n._)("h4",{id:"defined-in-1",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),E={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L276",target:"_blank",rel:"noopener noreferrer"},I=(0,n.Uk)("packages/console-input/src/types.ts:276"),S=(0,n.uE)('<hr><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> message</h3><p>• <code>Optional</code> <strong>message</strong>: <code>AsyncDynamicQuestionProperty</code>&lt;<code>string</code>, <code>T</code>&gt;</p><p>The message to show to the user.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4><p>Question.message</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:272</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <code>Optional</code> <strong>name</strong>: <code>KeyUnion</code>&lt;<code>T</code>&gt;</p><p>The key to save the answer to the answers-hash.</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4><p>Question.name</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:267</p><hr><h3 id="pagesize" tabindex="-1"><a class="header-anchor" href="#pagesize" aria-hidden="true">#</a> pageSize</h3><p>• <code>Optional</code> <strong>pageSize</strong>: <code>number</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',20),R={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L278",target:"_blank",rel:"noopener noreferrer"},M=(0,n.Uk)("packages/console-input/src/types.ts:278"),N=(0,n.uE)('<hr><h3 id="prefix" tabindex="-1"><a class="header-anchor" href="#prefix" aria-hidden="true">#</a> prefix</h3><p>• <code>Optional</code> <strong>prefix</strong>: <code>string</code></p><p>The prefix of the <code>message</code>.</p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4><p>Question.prefix</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:282</p><hr><h3 id="searchtext" tabindex="-1"><a class="header-anchor" href="#searchtext" aria-hidden="true">#</a> searchText</h3><p>• <code>Optional</code> <strong>searchText</strong>: <code>string</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',12),H={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L275",target:"_blank",rel:"noopener noreferrer"},C=(0,n.Uk)("packages/console-input/src/types.ts:275"),F=(0,n.uE)('<hr><h3 id="suffix" tabindex="-1"><a class="header-anchor" href="#suffix" aria-hidden="true">#</a> suffix</h3><p>• <code>Optional</code> <strong>suffix</strong>: <code>string</code></p><p>The suffix of the <code>message</code>.</p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4><p>Question.suffix</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:287</p><hr><h3 id="suggestonly" tabindex="-1"><a class="header-anchor" href="#suggestonly" aria-hidden="true">#</a> suggestOnly</h3><p>• <code>Optional</code> <strong>suggestOnly</strong>: <code>boolean</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',12),Z={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L274",target:"_blank",rel:"noopener noreferrer"},K=(0,n.Uk)("packages/console-input/src/types.ts:274"),Y=(0,n.uE)('<hr><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><p>• <code>Optional</code> <strong>type</strong>: <code>string</code></p><p>The type of the question.</p><h4 id="inherited-from-4" tabindex="-1"><a class="header-anchor" href="#inherited-from-4" aria-hidden="true">#</a> Inherited from</h4><p>Question.type</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:262</p><hr><h3 id="when" tabindex="-1"><a class="header-anchor" href="#when" aria-hidden="true">#</a> when</h3><p>• <code>Optional</code> <strong>when</strong>: <code>AsyncDynamicQuestionProperty</code>&lt;<code>boolean</code>, <code>T</code>&gt;</p><p>A value indicating whether the question should be prompted.</p><h4 id="inherited-from-5" tabindex="-1"><a class="header-anchor" href="#inherited-from-5" aria-hidden="true">#</a> Inherited from</h4><p>Question.when</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:303</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><p>▸ <code>Optional</code> <strong>filter</strong>(<code>options</code>): <code>string</code>[]</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>string</code>[]</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1" aria-hidden="true">#</a> Overrides</h4><p>Question.filter</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',26),j={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L280",target:"_blank",rel:"noopener noreferrer"},B=(0,n.Uk)("packages/console-input/src/types.ts:280"),G=(0,n.uE)('<hr><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> source</h3><p>▸ <strong>source</strong>(<code>answersSoFar</code>, <code>input</code>): <code>Promise</code>&lt;<code>string</code>[]&gt;</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>answersSoFar</code></td><td style="text-align:left;"><code>Answers</code></td></tr><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>string</code>[]&gt;</p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',8),J={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L284",target:"_blank",rel:"noopener noreferrer"},V=(0,n.Uk)("packages/console-input/src/types.ts:284"),X=(0,n.uE)('<hr><h3 id="validate" tabindex="-1"><a class="header-anchor" href="#validate" aria-hidden="true">#</a> validate</h3><p>▸ <code>Optional</code> <strong>validate</strong>(<code>line</code>): <code>boolean</code></p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>line</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="overrides-2" tabindex="-1"><a class="header-anchor" href="#overrides-2" aria-hidden="true">#</a> Overrides</h4><p>Question.validate</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',10),$={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L282",target:"_blank",rel:"noopener noreferrer"},ee=(0,n.Uk)("packages/console-input/src/types.ts:282"),te={},ae=(0,a(3744).Z)(te,[["render",function(e,t){const a=(0,n.up)("RouterLink"),te=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/"},{default:(0,n.w5)((()=>[i])),_:1}),r]),d,(0,n._)("ul",null,[(0,n._)("li",null,[o,s,(0,n._)("p",null,[l,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestion.html"},{default:(0,n.w5)((()=>[h])),_:1})])])]),c,p,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#default"},{default:(0,n.w5)((()=>[u])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#emptytext"},{default:(0,n.w5)((()=>[f])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#message"},{default:(0,n.w5)((()=>[g])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#name"},{default:(0,n.w5)((()=>[m])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#pagesize"},{default:(0,n.w5)((()=>[b])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#prefix"},{default:(0,n.w5)((()=>[x])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#searchtext"},{default:(0,n.w5)((()=>[y])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#suffix"},{default:(0,n.w5)((()=>[_])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#suggestonly"},{default:(0,n.w5)((()=>[k])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#type"},{default:(0,n.w5)((()=>[v])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#when"},{default:(0,n.w5)((()=>[O])),_:1})])]),U,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#filter"},{default:(0,n.w5)((()=>[w])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#source"},{default:(0,n.w5)((()=>[Q])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html#validate"},{default:(0,n.w5)((()=>[T])),_:1})])]),A,(0,n._)("p",null,[(0,n._)("a",W,[D,(0,n.Wm)(te)])]),P,q,L,z,(0,n._)("p",null,[(0,n._)("a",E,[I,(0,n.Wm)(te)])]),S,(0,n._)("p",null,[(0,n._)("a",R,[M,(0,n.Wm)(te)])]),N,(0,n._)("p",null,[(0,n._)("a",H,[C,(0,n.Wm)(te)])]),F,(0,n._)("p",null,[(0,n._)("a",Z,[K,(0,n.Wm)(te)])]),Y,(0,n._)("p",null,[(0,n._)("a",j,[B,(0,n.Wm)(te)])]),G,(0,n._)("p",null,[(0,n._)("a",J,[V,(0,n.Wm)(te)])]),X,(0,n._)("p",null,[(0,n._)("a",$,[ee,(0,n.Wm)(te)])])],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const a=e.__vccOpts||e;for(const[e,n]of t)a[e]=n;return a}},7263:(e,t,a)=>{a.r(t),a.d(t,{data:()=>n});const n={key:"v-552d69b6",path:"/packages/console-input/api/interfaces/AutocompleteQuestionOptions.html",title:"Interface: AutocompleteQuestionOptions<T>",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Type parameters",slug:"type-parameters",children:[]},{level:2,title:"Hierarchy",slug:"hierarchy",children:[]},{level:2,title:"Table of contents",slug:"table-of-contents",children:[{level:3,title:"Properties",slug:"properties",children:[]},{level:3,title:"Methods",slug:"methods",children:[]}]},{level:2,title:"Properties",slug:"properties-1",children:[{level:3,title:"default",slug:"default",children:[]},{level:3,title:"emptyText",slug:"emptytext",children:[]},{level:3,title:"message",slug:"message",children:[]},{level:3,title:"name",slug:"name",children:[]},{level:3,title:"pageSize",slug:"pagesize",children:[]},{level:3,title:"prefix",slug:"prefix",children:[]},{level:3,title:"searchText",slug:"searchtext",children:[]},{level:3,title:"suffix",slug:"suffix",children:[]},{level:3,title:"suggestOnly",slug:"suggestonly",children:[]},{level:3,title:"type",slug:"type",children:[]},{level:3,title:"when",slug:"when",children:[]}]},{level:2,title:"Methods",slug:"methods-1",children:[{level:3,title:"filter",slug:"filter",children:[]},{level:3,title:"source",slug:"source",children:[]},{level:3,title:"validate",slug:"validate",children:[]}]}],filePathRelative:"packages/console-input/api/interfaces/AutocompleteQuestionOptions.md"}}}]);