"use strict";(self.webpackChunkradic=self.webpackChunkradic||[]).push([[5972],{9959:(s,n,a)=>{a.r(n),a.d(n,{default:()=>o});const p=(0,a(6252).uE)('<h1 id="console-input" tabindex="-1"><a class="header-anchor" href="#console-input" aria-hidden="true">#</a> Console Input</h1><ul><li>Based on inquirer.</li><li>Includes a lot of optional extra prompts, if the relevant peerDependency is installed</li><li>Main purpose is to fire &#39;one-off&#39; questions like:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">await</span> Input<span class="token punctuation">.</span><span class="token function">fileTree</span><span class="token punctuation">(</span><span class="token string">&#39;Select the file to delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="toc" tabindex="-1"><a class="header-anchor" href="#toc" aria-hidden="true">#</a> Toc</h2><ul><li><a href="#installation">Installation</a></li><li><a href="#third-party-prompts">Third party prompts</a></li><li><a href="#full-api">Full API</a></li><li><a href="#some-examples">Examples</a></li></ul><h3 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h3><p><code>yarn add @radic/console-input</code></p><h3 id="third-party-prompts" tabindex="-1"><a class="header-anchor" href="#third-party-prompts" aria-hidden="true">#</a> Third party prompts</h3><p>Third party prompts are <code>peerDependencies</code> so you&#39;ll have to install them yourself if you&#39;d like to use em. Automatically integrated if installed.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- path:   inquirer-path\n- fuzzypath:   inquirer-fuzzy-path\n- directory:   inquirer-directory\n- autocomplete:   inquirer-autocomplete-prompt\n- datetime:   inquirer-datepicker\n- maxlength-input:   @matti-o7/inquirer-maxlength-input-prompt\n- file-path:   inquirer-file-path\n- file-tree-selection:   inquirer-file-tree-selection-prompt\n- file-selector:   inquirer-file-selector-prompt\n- color:   inquirer-chalk-pipe\n- suggest:   inquirer-prompt-suggest\n- table:   inquirer-table-prompt\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="full-api" tabindex="-1"><a class="header-anchor" href="#full-api" aria-hidden="true">#</a> Full API</h3><p><em>Created and/or modified all type definitions for each package it&#39;s options as can be checked in <a href="types/inquirer.d.ts">types/inquirer.d.ts</a></em></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">Input</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">inquirer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> inquirer<span class="token punctuation">.</span>Inquirer<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">Separator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">typeof</span> inquirer<span class="token punctuation">.</span>Separator<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> inquirer<span class="token punctuation">.</span>PromptModule<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">register</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> prompt<span class="token operator">:</span> PromptConstructor<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">typeof</span> Input<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">question</span><span class="token punctuation">(</span>question<span class="token operator">:</span> DistinctQuestion<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">input</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>InputQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">color</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>ColorQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">suggest</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> suggestions<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>SuggestQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">table</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> columns<span class="token operator">:</span> TableQuestion<span class="token punctuation">[</span><span class="token string">&#39;columns&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rows<span class="token operator">?</span><span class="token operator">:</span> TableQuestion<span class="token punctuation">[</span><span class="token string">&#39;rows&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>TableQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">confirm</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>ConfirmQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">checkbox</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> choices<span class="token operator">:</span> DistinctChoice<span class="token operator">&lt;</span>CheckboxChoiceMap<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> defaultChoice<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>CheckboxQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">list</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> choices<span class="token operator">:</span> DistinctChoice<span class="token operator">&lt;</span>ListChoiceMap<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> defaultChoice<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>ListQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">autocomplete</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">source</span><span class="token operator">:</span> <span class="token punctuation">(</span>answersSoFar<span class="token operator">:</span> Answers<span class="token punctuation">,</span> input<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>AutocompleteQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">datetime</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>DatepickerQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">maxinputlength</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> maxLength<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>MaxinputQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">path</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>PathQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">directory</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> basePath<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>DirectoryQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">fuzzypath</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> def<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FuzzypathQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">filePath</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> basePath<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FilePathQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">fsTree</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> root<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FileTreePathSelectorQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">fileTree</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> root<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FileTreePathSelectorQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">directoryTree</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> root<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FileTreePathSelectorQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> editorChoices<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n        value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> editorDefaultChoice<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">editor</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> question<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>EditorQuestion<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token function">edit</span><span class="token punctuation">(</span>content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> IFileOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="some-examples" tabindex="-1"><a class="header-anchor" href="#some-examples" aria-hidden="true">#</a> Some examples</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">await</span> Input<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;yes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> choice <span class="token operator">=</span> <span class="token keyword">await</span> Input<span class="token punctuation">.</span><span class="token function">checkbox</span><span class="token punctuation">(</span><span class="token string">&#39;Pick your foods&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;apples&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;pears&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;bananas&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> choice <span class="token operator">=</span> <span class="token keyword">await</span> Input<span class="token punctuation">.</span><span class="token function">checkbox</span><span class="token punctuation">(</span><span class="token string">&#39;Pick your food&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> checked<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        key    <span class="token operator">:</span> <span class="token string">&#39;apples&#39;</span><span class="token punctuation">,</span>        value  <span class="token operator">:</span> <span class="token string">&#39;Apples&#39;</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    Input<span class="token punctuation">.</span><span class="token function">Separator</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> checked<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        key    <span class="token operator">:</span> <span class="token string">&#39;cheese&#39;</span><span class="token punctuation">,</span>        value  <span class="token operator">:</span> <span class="token string">&#39;Cheese&#39;</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> files <span class="token operator">=</span> <span class="token keyword">await</span> ask<span class="token punctuation">.</span><span class="token function">filetree</span><span class="token punctuation">(</span><span class="token string">&#39;Pick the files you wish to delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/path/to/root&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    root<span class="token operator">:</span> <span class="token string">&#39;/path/to/root&#39;</span> <span class="token comment">// you can override parameters again in the options if you&#39;d like</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nfiles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>filePath <span class="token operator">=&gt;</span> <span class="token function">rm</span><span class="token punctuation">(</span><span class="token string">&#39;-rf&#39;</span><span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',18),t={},o=(0,a(3744).Z)(t,[["render",function(s,n){return p}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,p]of n)a[s]=p;return a}},5437:(s,n,a)=>{a.r(n),a.d(n,{data:()=>p});const p={key:"v-6683a124",path:"/packages/console-input/",title:"Console Input",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Toc",slug:"toc",children:[{level:3,title:"Installation",slug:"installation",children:[]},{level:3,title:"Third party prompts",slug:"third-party-prompts",children:[]},{level:3,title:"Full API",slug:"full-api",children:[]},{level:3,title:"Some examples",slug:"some-examples",children:[]}]}],filePathRelative:"packages/console-input/README.md"}}}]);