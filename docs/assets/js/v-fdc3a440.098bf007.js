"use strict";(self.webpackChunkradic=self.webpackChunkradic||[]).push([[7245],{124:(e,t,a)=>{a.r(t),a.d(t,{default:()=>Ge});var n=a(6252);const i=(0,n.Uk)("@radic/console-input"),r=(0,n.Uk)(" / FuzzypathQuestion"),d=(0,n.uE)('<h1 id="interface-fuzzypathquestion-t" tabindex="-1"><a class="header-anchor" href="#interface-fuzzypathquestion-t" aria-hidden="true">#</a> Interface: FuzzypathQuestion&lt;T&gt;</h1><p>Provides options for a question for the <code>inquirer-fuzzy-path</code>.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>Answers</code> = <code>Answers</code></td><td style="text-align:left;">The type of the answers.</td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',5),o=(0,n._)("code",null,"PathQuestionOptions",-1),s=(0,n.Uk)("<"),l=(0,n._)("code",null,"T",-1),h=(0,n.Uk)(">"),c=(0,n._)("p",null,[(0,n.Uk)("↳ "),(0,n._)("strong",null,[(0,n._)("code",null,"FuzzypathQuestion")])],-1),p=(0,n._)("h2",{id:"table-of-contents",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),(0,n.Uk)(" Table of contents")],-1),u=(0,n._)("h3",{id:"properties",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),(0,n.Uk)(" Properties")],-1),f=(0,n.Uk)("default"),g=(0,n.Uk)("depthLimit"),m=(0,n.Uk)("itemType"),y=(0,n.Uk)("message"),b=(0,n.Uk)("name"),x=(0,n.Uk)("prefix"),k=(0,n.Uk)("rootPath"),_=(0,n.Uk)("suffix"),w=(0,n.Uk)("suggestOnly"),U=(0,n.Uk)("type"),P=(0,n.Uk)("when"),v=(0,n._)("h3",{id:"methods",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),(0,n.Uk)(" Methods")],-1),O=(0,n.Uk)("excludeFilter"),Q=(0,n.Uk)("excludePath"),z=(0,n.Uk)("filter"),W=(0,n.Uk)("transformer"),T=(0,n.Uk)("validate"),F=(0,n.uE)('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h3><p>• <code>Optional</code> <strong>default</strong>: <code>string</code></p><p>The default value of the question.</p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> Overrides</h4>',5),D=(0,n.Uk)("PathQuestionOptions"),q=(0,n.Uk)("."),E=(0,n.Uk)("default"),L=(0,n._)("h4",{id:"defined-in",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),I={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L185",target:"_blank",rel:"noopener noreferrer"},R=(0,n.Uk)("packages/console-input/src/types.ts:185"),A=(0,n._)("hr",null,null,-1),N=(0,n._)("h3",{id:"depthlimit",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#depthlimit","aria-hidden":"true"},"#"),(0,n.Uk)(" depthLimit")],-1),M=(0,n._)("p",null,[(0,n.Uk)("• "),(0,n._)("code",null,"Optional"),(0,n.Uk)(),(0,n._)("strong",null,"depthLimit"),(0,n.Uk)(": "),(0,n._)("code",null,"number")],-1),H=(0,n._)("h4",{id:"defined-in-1",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),C={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L189",target:"_blank",rel:"noopener noreferrer"},Z=(0,n.Uk)("packages/console-input/src/types.ts:189"),j=(0,n.uE)('<hr><h3 id="itemtype" tabindex="-1"><a class="header-anchor" href="#itemtype" aria-hidden="true">#</a> itemType</h3><p>• <code>Optional</code> <strong>itemType</strong>: <code>&quot;directory&quot;</code> | <code>&quot;any&quot;</code> | <code>&quot;file&quot;</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',4),K={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L177",target:"_blank",rel:"noopener noreferrer"},S=(0,n.Uk)("packages/console-input/src/types.ts:177"),V=(0,n.uE)('<hr><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> message</h3><p>• <code>Optional</code> <strong>message</strong>: <code>AsyncDynamicQuestionProperty</code>&lt;<code>string</code>, <code>T</code>&gt;</p><p>The message to show to the user.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),Y=(0,n.Uk)("PathQuestionOptions"),B=(0,n.Uk)("."),G=(0,n.Uk)("message"),J=(0,n.uE)('<h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:272</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <code>Optional</code> <strong>name</strong>: <code>KeyUnion</code>&lt;<code>T</code>&gt;</p><p>The key to save the answer to the answers-hash.</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4>',7),X=(0,n.Uk)("PathQuestionOptions"),$=(0,n.Uk)("."),ee=(0,n.Uk)("name"),te=(0,n.uE)('<h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:267</p><hr><h3 id="prefix" tabindex="-1"><a class="header-anchor" href="#prefix" aria-hidden="true">#</a> prefix</h3><p>• <code>Optional</code> <strong>prefix</strong>: <code>string</code></p><p>The prefix of the <code>message</code>.</p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4>',7),ae=(0,n.Uk)("PathQuestionOptions"),ne=(0,n.Uk)("."),ie=(0,n.Uk)("prefix"),re=(0,n.uE)('<h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:282</p><hr><h3 id="rootpath" tabindex="-1"><a class="header-anchor" href="#rootpath" aria-hidden="true">#</a> rootPath</h3><p>• <code>Optional</code> <strong>rootPath</strong>: <code>string</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',6),de={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L182",target:"_blank",rel:"noopener noreferrer"},oe=(0,n.Uk)("packages/console-input/src/types.ts:182"),se=(0,n.uE)('<hr><h3 id="suffix" tabindex="-1"><a class="header-anchor" href="#suffix" aria-hidden="true">#</a> suffix</h3><p>• <code>Optional</code> <strong>suffix</strong>: <code>string</code></p><p>The suffix of the <code>message</code>.</p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4>',5),le=(0,n.Uk)("PathQuestionOptions"),he=(0,n.Uk)("."),ce=(0,n.Uk)("suffix"),pe=(0,n.uE)('<h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:287</p><hr><h3 id="suggestonly" tabindex="-1"><a class="header-anchor" href="#suggestonly" aria-hidden="true">#</a> suggestOnly</h3><p>• <code>Optional</code> <strong>suggestOnly</strong>: <code>boolean</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',6),ue={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L186",target:"_blank",rel:"noopener noreferrer"},fe=(0,n.Uk)("packages/console-input/src/types.ts:186"),ge=(0,n.uE)('<hr><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><p>• <code>Optional</code> <strong>type</strong>: <code>&quot;fuzzypath&quot;</code></p><p>The type of the question.</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1" aria-hidden="true">#</a> Overrides</h4>',5),me=(0,n.Uk)("PathQuestionOptions"),ye=(0,n.Uk)("."),be=(0,n.Uk)("type"),xe=(0,n._)("h4",{id:"defined-in-9",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),ke={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L170",target:"_blank",rel:"noopener noreferrer"},_e=(0,n.Uk)("packages/console-input/src/types.ts:170"),we=(0,n.uE)('<hr><h3 id="when" tabindex="-1"><a class="header-anchor" href="#when" aria-hidden="true">#</a> when</h3><p>• <code>Optional</code> <strong>when</strong>: <code>AsyncDynamicQuestionProperty</code>&lt;<code>boolean</code>, <code>T</code>&gt;</p><p>A value indicating whether the question should be prompted.</p><h4 id="inherited-from-4" tabindex="-1"><a class="header-anchor" href="#inherited-from-4" aria-hidden="true">#</a> Inherited from</h4>',5),Ue=(0,n.Uk)("PathQuestionOptions"),Pe=(0,n.Uk)("."),ve=(0,n.Uk)("when"),Oe=(0,n.uE)('<h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:303</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="excludefilter" tabindex="-1"><a class="header-anchor" href="#excludefilter" aria-hidden="true">#</a> excludeFilter</h3><p>▸ <code>Optional</code> <strong>excludeFilter</strong>(<code>nodePath</code>): <code>boolean</code></p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>nodePath</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',10),Qe={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L174",target:"_blank",rel:"noopener noreferrer"},ze=(0,n.Uk)("packages/console-input/src/types.ts:174"),We=(0,n.uE)('<hr><h3 id="excludepath" tabindex="-1"><a class="header-anchor" href="#excludepath" aria-hidden="true">#</a> excludePath</h3><p>▸ <code>Optional</code> <strong>excludePath</strong>(<code>nodePath</code>): <code>boolean</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>nodePath</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',8),Te={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L171",target:"_blank",rel:"noopener noreferrer"},Fe=(0,n.Uk)("packages/console-input/src/types.ts:171"),De=(0,n.uE)('<hr><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><p>▸ <code>Optional</code> <strong>filter</strong>(<code>input</code>, <code>answers</code>): <code>any</code></p><p>Post-processes the answer.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The answer provided by the user.</td></tr><tr><td style="text-align:left;"><code>answers</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">The answers provided by the user.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>any</code></p><h4 id="inherited-from-5" tabindex="-1"><a class="header-anchor" href="#inherited-from-5" aria-hidden="true">#</a> Inherited from</h4>',9),qe=(0,n.Uk)("PathQuestionOptions"),Ee=(0,n.Uk)("."),Le=(0,n.Uk)("filter"),Ie=(0,n.uE)('<h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>node_modules/@types/inquirer/index.d.ts:298</p><hr><h3 id="transformer" tabindex="-1"><a class="header-anchor" href="#transformer" aria-hidden="true">#</a> transformer</h3><p>▸ <code>Optional</code> <strong>transformer</strong>(<code>input</code>, <code>answers</code>, <code>flags</code>): <code>string</code> | <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Transforms the value to display to the user.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The input provided by the user.</td></tr><tr><td style="text-align:left;"><code>answers</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">The answers provided by the users.</td></tr><tr><td style="text-align:left;"><code>flags</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Additional information about the value.</td></tr><tr><td style="text-align:left;"><code>flags.isFinal?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>string</code> | <code>Promise</code>&lt;<code>string</code>&gt;</p><p>The value to display to the user.</p><h4 id="inherited-from-6" tabindex="-1"><a class="header-anchor" href="#inherited-from-6" aria-hidden="true">#</a> Inherited from</h4>',12),Re=(0,n.Uk)("PathQuestionOptions"),Ae=(0,n.Uk)("."),Ne=(0,n.Uk)("transformer"),Me=(0,n._)("h4",{id:"defined-in-14",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),He={href:"https://github.com/robinradic/npm-console/blob/10cb77f/packages/console-input/src/types.ts#L140",target:"_blank",rel:"noopener noreferrer"},Ce=(0,n.Uk)("packages/console-input/src/types.ts:140"),Ze=(0,n.uE)('<hr><h3 id="validate" tabindex="-1"><a class="header-anchor" href="#validate" aria-hidden="true">#</a> validate</h3><p>▸ <code>Optional</code> <strong>validate</strong>(<code>input</code>, <code>answers?</code>): <code>string</code> | <code>boolean</code> | <code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p><p>Validates the integrity of the answer.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The answer provided by the user.</td></tr><tr><td style="text-align:left;"><code>answers?</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">The answers provided by the user.</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>string</code> | <code>boolean</code> | <code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p><p>Either a value indicating whether the answer is valid or a <code>string</code> which describes the error.</p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7" aria-hidden="true">#</a> Inherited from</h4>',10),je=(0,n.Uk)("PathQuestionOptions"),Ke=(0,n.Uk)("."),Se=(0,n.Uk)("validate"),Ve=(0,n._)("h4",{id:"defined-in-15",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),(0,n.Uk)(" Defined in")],-1),Ye=(0,n._)("p",null,"node_modules/@types/inquirer/index.d.ts:317",-1),Be={},Ge=(0,a(3744).Z)(Be,[["render",function(e,t){const a=(0,n.up)("RouterLink"),Be=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/"},{default:(0,n.w5)((()=>[i])),_:1}),r]),d,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[o])),_:1}),s,l,h]),c])]),p,u,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#default"},{default:(0,n.w5)((()=>[f])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#depthlimit"},{default:(0,n.w5)((()=>[g])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#itemtype"},{default:(0,n.w5)((()=>[m])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#message"},{default:(0,n.w5)((()=>[y])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#name"},{default:(0,n.w5)((()=>[b])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#prefix"},{default:(0,n.w5)((()=>[x])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#rootpath"},{default:(0,n.w5)((()=>[k])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#suffix"},{default:(0,n.w5)((()=>[_])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#suggestonly"},{default:(0,n.w5)((()=>[w])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#type"},{default:(0,n.w5)((()=>[U])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#when"},{default:(0,n.w5)((()=>[P])),_:1})])]),v,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#excludefilter"},{default:(0,n.w5)((()=>[O])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#excludepath"},{default:(0,n.w5)((()=>[Q])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#filter"},{default:(0,n.w5)((()=>[z])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#transformer"},{default:(0,n.w5)((()=>[W])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/FuzzypathQuestion.html#validate"},{default:(0,n.w5)((()=>[T])),_:1})])]),F,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[D])),_:1}),q,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#default"},{default:(0,n.w5)((()=>[E])),_:1})]),L,(0,n._)("p",null,[(0,n._)("a",I,[R,(0,n.Wm)(Be)])]),A,N,M,H,(0,n._)("p",null,[(0,n._)("a",C,[Z,(0,n.Wm)(Be)])]),j,(0,n._)("p",null,[(0,n._)("a",K,[S,(0,n.Wm)(Be)])]),V,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[Y])),_:1}),B,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#message"},{default:(0,n.w5)((()=>[G])),_:1})]),J,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[X])),_:1}),$,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#name"},{default:(0,n.w5)((()=>[ee])),_:1})]),te,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[ae])),_:1}),ne,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#prefix"},{default:(0,n.w5)((()=>[ie])),_:1})]),re,(0,n._)("p",null,[(0,n._)("a",de,[oe,(0,n.Wm)(Be)])]),se,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[le])),_:1}),he,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#suffix"},{default:(0,n.w5)((()=>[ce])),_:1})]),pe,(0,n._)("p",null,[(0,n._)("a",ue,[fe,(0,n.Wm)(Be)])]),ge,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[me])),_:1}),ye,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#type"},{default:(0,n.w5)((()=>[be])),_:1})]),xe,(0,n._)("p",null,[(0,n._)("a",ke,[_e,(0,n.Wm)(Be)])]),we,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[Ue])),_:1}),Pe,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#when"},{default:(0,n.w5)((()=>[ve])),_:1})]),Oe,(0,n._)("p",null,[(0,n._)("a",Qe,[ze,(0,n.Wm)(Be)])]),We,(0,n._)("p",null,[(0,n._)("a",Te,[Fe,(0,n.Wm)(Be)])]),De,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[qe])),_:1}),Ee,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#filter"},{default:(0,n.w5)((()=>[Le])),_:1})]),Ie,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[Re])),_:1}),Ae,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#transformer"},{default:(0,n.w5)((()=>[Ne])),_:1})]),Me,(0,n._)("p",null,[(0,n._)("a",He,[Ce,(0,n.Wm)(Be)])]),Ze,(0,n._)("p",null,[(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html"},{default:(0,n.w5)((()=>[je])),_:1}),Ke,(0,n.Wm)(a,{to:"/packages/console-input/api/interfaces/PathQuestionOptions.html#validate"},{default:(0,n.w5)((()=>[Se])),_:1})]),Ve,Ye],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const a=e.__vccOpts||e;for(const[e,n]of t)a[e]=n;return a}},5203:(e,t,a)=>{a.r(t),a.d(t,{data:()=>n});const n={key:"v-fdc3a440",path:"/packages/console-input/api/interfaces/FuzzypathQuestion.html",title:"Interface: FuzzypathQuestion<T>",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Type parameters",slug:"type-parameters",children:[]},{level:2,title:"Hierarchy",slug:"hierarchy",children:[]},{level:2,title:"Table of contents",slug:"table-of-contents",children:[{level:3,title:"Properties",slug:"properties",children:[]},{level:3,title:"Methods",slug:"methods",children:[]}]},{level:2,title:"Properties",slug:"properties-1",children:[{level:3,title:"default",slug:"default",children:[]},{level:3,title:"depthLimit",slug:"depthlimit",children:[]},{level:3,title:"itemType",slug:"itemtype",children:[]},{level:3,title:"message",slug:"message",children:[]},{level:3,title:"name",slug:"name",children:[]},{level:3,title:"prefix",slug:"prefix",children:[]},{level:3,title:"rootPath",slug:"rootpath",children:[]},{level:3,title:"suffix",slug:"suffix",children:[]},{level:3,title:"suggestOnly",slug:"suggestonly",children:[]},{level:3,title:"type",slug:"type",children:[]},{level:3,title:"when",slug:"when",children:[]}]},{level:2,title:"Methods",slug:"methods-1",children:[{level:3,title:"excludeFilter",slug:"excludefilter",children:[]},{level:3,title:"excludePath",slug:"excludepath",children:[]},{level:3,title:"filter",slug:"filter",children:[]},{level:3,title:"transformer",slug:"transformer",children:[]},{level:3,title:"validate",slug:"validate",children:[]}]}],filePathRelative:"packages/console-input/api/interfaces/FuzzypathQuestion.md"}}}]);